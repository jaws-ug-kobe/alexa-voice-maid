{
  "version":"2.0",
  "metadata":{
    "apiVersion":"2016-06-10",
    "endpointPrefix":"polly",
    "protocol":"rest-json",
    "serviceFullName":"Polly",
    "signatureVersion":"v4"
  },
  "operations":{
    "DeleteLexicon":{
      "name":"DeleteLexicon",
      "http":{
        "method":"DELETE",
        "requestUri":"/v1/lexicons/{LexiconName}",
        "responseCode":200
      },
      "input":{"shape":"DeleteLexiconInput"},
      "output":{"shape":"DeleteLexiconOutput"},
      "errors":[
        {"shape":"LexiconNotFoundException"},
        {"shape":"ServiceFailureException"}
      ],
      "documentation":"<p>Deletes the specified lexicon in an AWS region for an AWS account. For more information, see <a>examples-managing-lexicons</a>.</p>"
    },
    "DescribeVoices":{
      "name":"DescribeVoices",
      "http":{
        "method":"GET",
        "requestUri":"/v1/voices",
        "responseCode":200
      },
      "input":{"shape":"DescribeVoicesInput"},
      "output":{"shape":"DescribeVoicesOutput"},
      "errors":[
        {"shape":"InvalidNextTokenException"},
        {"shape":"ServiceFailureException"}
      ],
      "documentation":"<p>Returns the list of voices (voice ID, gender, and language) that are available for use when requesting speech synthesis. You provide the voice ID for the voice you select from the list in the <code>SynthesizeSpeech</code> operation. </p> <p>For example, you want a news reader application to read news in a specific language and a specific voice. Using this operation, you can give a user a list of available voices to select from. </p> <p> You can optionally specify an ISO language code to filter available voices. For example, if you specify <code>en-US</code>, the operation returns a list of all available US English voices. </p> <p>This operation requires permission for the <code>polly:DescribeVoices</code> action.</p>"
    },
    "GetLexicon":{
      "name":"GetLexicon",
      "http":{
        "method":"GET",
        "requestUri":"/v1/lexicons/{LexiconName}",
        "responseCode":200
      },
      "input":{"shape":"GetLexiconInput"},
      "output":{"shape":"GetLexiconOutput"},
      "errors":[
        {"shape":"LexiconNotFoundException"},
        {"shape":"ServiceFailureException"}
      ],
      "documentation":"<p>Returns the content of the specified lexicon stored in an AWS region. For more information about lexicons,see <a>examples-managing-lexicons</a> </p>"
    },
    "ListLexicons":{
      "name":"ListLexicons",
      "http":{
        "method":"GET",
        "requestUri":"/v1/lexicons",
        "responseCode":200
      },
      "input":{"shape":"ListLexiconsInput"},
      "output":{"shape":"ListLexiconsOutput"},
      "errors":[
        {"shape":"InvalidNextTokenException"},
        {"shape":"ServiceFailureException"}
      ],
      "documentation":"<p>Returns a list of lexicons stored in an AWS region for an AWS account.</p>"
    },
    "PutLexicon":{
      "name":"PutLexicon",
      "http":{
        "method":"PUT",
        "requestUri":"/v1/lexicons/{LexiconName}",
        "responseCode":200
      },
      "input":{"shape":"PutLexiconInput"},
      "output":{"shape":"PutLexiconOutput"},
      "errors":[
        {"shape":"InvalidLexiconException"},
        {"shape":"UnsupportedPlsAlphabetException"},
        {"shape":"UnsupportedPlsLanguageException"},
        {"shape":"LexiconSizeExceededException"},
        {"shape":"MaxLexemeLengthExceededException"},
        {"shape":"MaxLexiconsNumberExceededException"},
        {"shape":"ServiceFailureException"}
      ],
      "documentation":"<p>Stores a lexicon in an AWS region. For more information, see <a>examples-managing-lexicons</a>.</p>"
    },
    "SynthesizeSpeech":{
      "name":"SynthesizeSpeech",
      "http":{
        "method":"POST",
        "requestUri":"/v1/speech",
        "responseCode":200
      },
      "input":{"shape":"SynthesizeSpeechInput"},
      "output":{"shape":"SynthesizeSpeechOutput"},
      "errors":[
        {"shape":"TextLengthExceededException"},
        {"shape":"InvalidSampleRateException"},
        {"shape":"InvalidSsmlException"},
        {"shape":"LexiconNotFoundException"},
        {"shape":"ServiceFailureException"}
      ],
      "documentation":"<p>Synthesizes the text or SSML to an audio stream. </p>"
    }
  },
  "shapes":{
    "Alphabet":{"type":"string"},
    "AudioStream":{
      "type":"blob",
      "streaming":true
    },
    "ContentType":{"type":"string"},
    "DeleteLexiconInput":{
      "type":"structure",
      "required":["Name"],
      "members":{
        "Name":{
          "shape":"LexiconName",
          "documentation":"<p>The name of the lexicon to delete.</p>",
          "location":"uri",
          "locationName":"LexiconName"
        }
      }
    },
    "DeleteLexiconOutput":{
      "type":"structure",
      "members":{
      }
    },
    "DescribeVoicesInput":{
      "type":"structure",
      "members":{
        "LanguageCode":{
          "shape":"LanguageCode",
          "documentation":"<p> The ISO language code for filtering the voices returned. If you don't specify this optional parameter, all available voices are returned. </p>",
          "location":"querystring",
          "locationName":"LanguageCode"
        },
        "NextToken":{
          "shape":"NextToken",
          "documentation":"<p>An opaque pagination token returned from the previous <code>DescribeVoices</code> operation. If present, this indicates where to continue the listing.</p>",
          "location":"querystring",
          "locationName":"NextToken"
        }
      }
    },
    "DescribeVoicesOutput":{
      "type":"structure",
      "members":{
        "Voices":{
          "shape":"VoiceList",
          "documentation":"<p>A list of voices with their properties.</p>"
        },
        "NextToken":{
          "shape":"NextToken",
          "documentation":"<p>The pagination token to use in the next request to continue the listing of voices. <code>NextToken</code> is returned only if the response is truncated.</p>"
        }
      }
    },
    "ErrorMessage":{"type":"string"},
    "Gender":{
      "type":"string",
      "enum":[
        "Female",
        "Male"
      ]
    },
    "GetLexiconInput":{
      "type":"structure",
      "required":["Name"],
      "members":{
        "Name":{
          "shape":"LexiconName",
          "documentation":"<p>Name of the lexicon.</p>",
          "location":"uri",
          "locationName":"LexiconName"
        }
      }
    },
    "GetLexiconOutput":{
      "type":"structure",
      "members":{
        "Lexicon":{
          "shape":"Lexicon",
          "documentation":"<p>Lexicon object that provides name and the binary content of the lexicon. </p>"
        },
        "LexiconAttributes":{
          "shape":"LexiconAttributes",
          "documentation":"<p>Metadata of the lexicon, including phonetic alphabetic used, language code, lexicon ARN, number of lexemes defined in the lexicon, and size of lexicon in bytes.</p>"
        }
      }
    },
    "InvalidLexiconException":{
      "type":"structure",
      "members":{
        "message":{"shape":"ErrorMessage"}
      },
      "documentation":"<p>The name of the lexicon specified could not be found. Please check the spelling of the lexicon's name.</p>",
      "error":{"httpStatusCode":400},
      "exception":true
    },
    "InvalidNextTokenException":{
      "type":"structure",
      "members":{
        "message":{"shape":"ErrorMessage"}
      },
      "documentation":"<p>The NextToken is invalid. Please verify that it is spelled correctly.</p>",
      "error":{"httpStatusCode":400},
      "exception":true
    },
    "InvalidSampleRateException":{
      "type":"structure",
      "members":{
        "message":{"shape":"ErrorMessage"}
      },
      "documentation":"<p>The specified sample rate is not valid. Valid values are <b>need range of acceptable values</b>.</p>",
      "error":{"httpStatusCode":400},
      "exception":true
    },
    "InvalidSsmlException":{
      "type":"structure",
      "members":{
        "message":{"shape":"ErrorMessage"}
      },
      "documentation":"<p>The SSML used is invalid. Please verify syntax and spelling of tags, and values.</p>",
      "error":{"httpStatusCode":400},
      "exception":true
    },
    "LanguageCode":{
      "type":"string",
      "enum":[
        "cy-GB",
        "da-DK",
        "de-DE",
        "en-AU",
        "en-GB",
        "en-GB-WLS",
        "en-IN",
        "en-US",
        "es-ES",
        "es-US",
        "fr-CA",
        "fr-FR",
        "is-IS",
        "it-IT",
        "nb-NO",
        "nl-NL",
        "pl-PL",
        "pt-BR",
        "pt-PT",
        "ro-RO",
        "ru-RU",
        "sv-SE",
        "tr-TR"
      ]
    },
    "LanguageName":{"type":"string"},
    "LastModified":{"type":"timestamp"},
    "LexemesCount":{"type":"integer"},
    "Lexicon":{
      "type":"structure",
      "members":{
        "Content":{
          "shape":"LexiconContent",
          "documentation":"<p>Lexicon content in binary format.</p>"
        },
        "Name":{
          "shape":"LexiconName",
          "documentation":"<p>Name of the lexicon.</p>"
        }
      },
      "documentation":"<p>Provides lexicon name and lexicon content in binary format.</p>"
    },
    "LexiconArn":{"type":"string"},
    "LexiconAttributes":{
      "type":"structure",
      "members":{
        "Alphabet":{
          "shape":"Alphabet",
          "documentation":"<p>The phonetic alphabet used in the lexicon.</p>"
        },
        "LanguageCode":{
          "shape":"LanguageCode",
          "documentation":"<p>The language code that the lexicon applies to.</p>"
        },
        "LastModified":{
          "shape":"LastModified",
          "documentation":"<p>Date lexicon was last modified (a timestamp value).</p>"
        },
        "LexiconArn":{
          "shape":"LexiconArn",
          "documentation":"<p>Amazon Resource Name (ARN) of the lexicon.</p>"
        },
        "LexemesCount":{
          "shape":"LexemesCount",
          "documentation":"<p>The number of lexemes in the lexicon.</p>"
        },
        "Size":{
          "shape":"Size",
          "documentation":"<p>The total size of the lexicon, in bytes.</p>"
        }
      },
      "documentation":"<p>Contains metadata describing the lexicon such as the lexicon name, number of lexemes,language code, and so on. For more information about lexicons, see <a>examples-managing-lexicons</a> </p>"
    },
    "LexiconContent":{"type":"string"},
    "LexiconDescription":{
      "type":"structure",
      "members":{
        "Name":{
          "shape":"LexiconName",
          "documentation":"<p>Name of the lexicon.</p>"
        },
        "Attributes":{
          "shape":"LexiconAttributes",
          "documentation":"<p>Provides lexicon metadata.</p>"
        }
      },
      "documentation":"<p>Describes the content of the lexicon.</p>"
    },
    "LexiconDescriptionList":{
      "type":"list",
      "member":{"shape":"LexiconDescription"}
    },
    "LexiconName":{
      "type":"string",
      "pattern":"[0-9A-Za-z]{1,20}",
      "sensitive":true
    },
    "LexiconNameList":{
      "type":"list",
      "member":{"shape":"LexiconName"},
      "max":5
    },
    "LexiconNotFoundException":{
      "type":"structure",
      "members":{
        "message":{"shape":"ErrorMessage"}
      },
      "documentation":"<p>The specified lexicon could not be found. Please check the spelling of the lexicon's name.</p>",
      "error":{"httpStatusCode":404},
      "exception":true
    },
    "LexiconSizeExceededException":{
      "type":"structure",
      "members":{
        "message":{"shape":"ErrorMessage"}
      },
      "documentation":"<p>The maximum size of the specified lexicon would be exceeded by this operation.</p>",
      "error":{"httpStatusCode":400},
      "exception":true
    },
    "ListLexiconsInput":{
      "type":"structure",
      "members":{
        "NextToken":{
          "shape":"NextToken",
          "documentation":"<p>An opaque pagination token returned from previous <code>ListLexicons</code> operation. If present, indicates where to continue the listing of lexicons.</p>",
          "location":"querystring",
          "locationName":"NextToken"
        }
      }
    },
    "ListLexiconsOutput":{
      "type":"structure",
      "members":{
        "Lexicons":{
          "shape":"LexiconDescriptionList",
          "documentation":"<p>A list of lexicon names and attributes.</p>"
        },
        "NextToken":{
          "shape":"NextToken",
          "documentation":"<p>The pagination token to use in the next request to continue the listing of lexicons. <code>NextToken</code> is returned only if the response is truncated.</p>"
        }
      }
    },
    "MaxLexemeLengthExceededException":{
      "type":"structure",
      "members":{
        "message":{"shape":"ErrorMessage"}
      },
      "documentation":"<p>The maximum size of the lexeme would be exceeded by this operation.</p>",
      "error":{"httpStatusCode":400},
      "exception":true
    },
    "MaxLexiconsNumberExceededException":{
      "type":"structure",
      "members":{
        "message":{"shape":"ErrorMessage"}
      },
      "documentation":"<p>The maximum number of lexicons would be exceeded by this operation.</p>",
      "error":{"httpStatusCode":400},
      "exception":true
    },
    "NextToken":{"type":"string"},
    "OutputFormat":{
      "type":"string",
      "enum":[
        "mp3",
        "ogg_vorbis",
        "pcm"
      ]
    },
    "PutLexiconInput":{
      "type":"structure",
      "required":[
        "Name",
        "Content"
      ],
      "members":{
        "Name":{
          "shape":"LexiconName",
          "documentation":"<p>Name of the lexicon. The name must follow the regular express format [0-9A-Za-z]{1,20}. That is, name is a case-sensitive alphanumeric string up to 20 characters long. </p>",
          "location":"uri",
          "locationName":"LexiconName"
        },
        "Content":{
          "shape":"LexiconContent",
          "documentation":"<p>Content of the PLS lexicon as binary data.</p>"
        }
      }
    },
    "PutLexiconOutput":{
      "type":"structure",
      "members":{
      }
    },
    "RequestCharacters":{"type":"integer"},
    "SampleRate":{"type":"string"},
    "ServiceFailureException":{
      "type":"structure",
      "members":{
        "message":{"shape":"ErrorMessage"}
      },
      "error":{"httpStatusCode":500},
      "exception":true,
      "fault":true
    },
    "Size":{"type":"integer"},
    "SynthesizeSpeechInput":{
      "type":"structure",
      "required":[
        "OutputFormat",
        "Text",
        "VoiceId"
      ],
      "members":{
        "LexiconNames":{
          "shape":"LexiconNameList",
          "documentation":"<p>List of one or more lexicon names you want the service to apply during synthesis. For information about storing lexicons, see .</p>"
        },
        "OutputFormat":{
          "shape":"OutputFormat",
          "documentation":"<p>Format to use for the resulting audio stream.</p>"
        },
        "SampleRate":{
          "shape":"SampleRate",
          "documentation":"<p>The audio frequency specified in Hz. </p> <p> The valid values for <code>mp3</code> and <code>ogg_vorbis</code> are \"8000\", \"16000\", and \"22050\". The default value is 22050.</p> <p>Valid values for <code>pcm</code> are \"8000\" and \"16000\". The default value is ???.</p>"
        },
        "Text":{
          "shape":"Text",
          "documentation":"<p>Input text to synthesize. If you specify <code>ssml</code> as the <code>TextType</code>, follow the SSML format for the input text.</p>"
        },
        "TextType":{
          "shape":"TextType",
          "documentation":"<p>Specifies whether the input text is plain text or SSML. The default value is text. For more information about SSML, see <a>examples-ssml-input</a>.</p>"
        },
        "VoiceId":{
          "shape":"VoiceId",
          "documentation":"<p>Voice ID to use for the synthesis. You can get a list of available voice IDs by calling the operation.</p>"
        }
      }
    },
    "SynthesizeSpeechOutput":{
      "type":"structure",
      "members":{
        "AudioStream":{
          "shape":"AudioStream",
          "documentation":"<p>Stream containing the synthesized speech.</p>"
        },
        "ContentType":{
          "shape":"ContentType",
          "documentation":"<p>Specifies the type audio stream. This should reflect the <code>OutputFormat</code> parameter in your request. </p> <ul> <li> <p> If you request <code>mp3</code> as the <code>OutputFormat</code>, the <code>ContentType</code> returned is audio/mpeg. </p> </li> <li> <p> If you request <code>ogg_vorbis</code> as the <code>OutputFormat</code>, the <code>ContentType</code> returned is audio/ogg. </p> </li> <li> <p> If you request <code>pcm</code> as the <code>OutputFormat</code>, the <code>ContentType</code> returned is audio/pcm. </p> </li> </ul> <p> </p>",
          "location":"header",
          "locationName":"Content-Type"
        },
        "RequestCharacters":{
          "shape":"RequestCharacters",
          "documentation":"<p>Number of characters synthesized.</p>",
          "location":"header",
          "locationName":"x-amzn-RequestCharacters"
        }
      },
      "payload":"AudioStream"
    },
    "Text":{"type":"string"},
    "TextLengthExceededException":{
      "type":"structure",
      "members":{
        "message":{"shape":"ErrorMessage"}
      },
      "error":{"httpStatusCode":400},
      "exception":true
    },
    "TextType":{
      "type":"string",
      "enum":[
        "ssml",
        "text"
      ]
    },
    "UnsupportedPlsAlphabetException":{
      "type":"structure",
      "members":{
        "message":{"shape":"ErrorMessage"}
      },
      "error":{"httpStatusCode":400},
      "exception":true
    },
    "UnsupportedPlsLanguageException":{
      "type":"structure",
      "members":{
        "message":{"shape":"ErrorMessage"}
      },
      "error":{"httpStatusCode":400},
      "exception":true
    },
    "Voice":{
      "type":"structure",
      "members":{
        "Gender":{
          "shape":"Gender",
          "documentation":"<p>Gender of the voice.</p>"
        },
        "Id":{
          "shape":"VoiceId",
          "documentation":"<p>AWS Polly assigned voice ID. This is the ID that you specify when calling the <code>SynthesizeSpeech</code> operation.</p>"
        },
        "LanguageCode":{
          "shape":"LanguageCode",
          "documentation":"<p>Language code of the voice.</p>"
        },
        "LanguageName":{
          "shape":"LanguageName",
          "documentation":"<p>Human readable name of the language in English.</p>"
        },
        "Name":{
          "shape":"VoiceName",
          "documentation":"<p>Name of the voice (for example \"Salli\", \"Kendra\"). This provides a human readable voice name that you might display in your application.</p>"
        }
      },
      "documentation":"<p>Description of the voice.</p>"
    },
    "VoiceId":{
      "type":"string",
      "enum":[
        "Geraint",
        "Gwyneth",
        "Mads",
        "Naja",
        "Hans",
        "Marlene",
        "Nicole",
        "Russell",
        "Amy",
        "Brian",
        "Emma",
        "Raveena",
        "Ivy",
        "Joanna",
        "Joey",
        "Justin",
        "Kendra",
        "Kimberly",
        "Salli",
        "Conchita",
        "Enrique",
        "Miguel",
        "Penelope",
        "Chantal",
        "Celine",
        "Mathieu",
        "Dora",
        "Karl",
        "Carla",
        "Giorgio",
        "Liv",
        "Lotte",
        "Ruben",
        "Ewa",
        "Jacek",
        "Jan",
        "Maja",
        "Ricardo",
        "Vitoria",
        "Cristiano",
        "Ines",
        "Carmen",
        "Maxim",
        "Tatyana",
        "Astrid",
        "Filiz"
      ]
    },
    "VoiceList":{
      "type":"list",
      "member":{"shape":"Voice"}
    },
    "VoiceName":{"type":"string"}
  },
  "documentation":"<p>AWS Polly is a web service that makes it easy to synthesize speech from text.</p> <p>The Polly service provides API operations for synthesizing high-quality speech from text and Speech Synthesis Markup Language (SSML), along with managing pronunciations lexicons that enable you to get the best results for your application domain.</p>"
}
